theory Chapter_system
  imports
  Main 
  "HOL-Library.LaTeXsugar"
begin
(* turn off alternative printing of function card, introduced by LaTeXsugar *)
(* tag %invisible suppresses printing the no_notation command *)
no_notation %invisible (latex output) card  ("|_|")

chapter "Isabelle System"
text_raw\<open>\label{system}\<close>

text \<open>
Isabelle is a ``proof assistant'' for formal mathematical proofs. It supports a notation for propositions and 
their proofs, it can check whether a proof is correct, and it can even help to find a proof.

This introductory manual explains how to work with Isabelle to develop mathematical models.
It does not presume prior knowledge about formal or informal proof techniques. It only assumes that 
the reader has a basic understanding of mathematical logics and the task of proving mathematical 
propositions.
\<close>

section "Invoking Isabelle"
text_raw\<open>\label{system-invoke}\<close>

text \<open>
After installation, Isabelle can be invoked interactively as an editor for entering propositions and proofs,
or it can be invoked noninteractively to check a proof and generate a PDF document which displays the 
propositions and proofs.
\<close>

subsection "Installation and Configuration"
text_raw\<open>\label{system-invoke-install}\<close>
text \<open>
Isabelle is freely available from \<^verbatim>\<open>https://isabelle.in.tum.de/\<close> and other mirror sites for Windows,
Mac, and Linux. It is actively maintained, there is usually one release every year. Older releases
are available in a distribution archive.

To install Isabelle, follow the instructions on
\begin{verbatim}
 https://isabelle.in.tum.de/installation.html
\end{verbatim} 
Although there are many configuration options, there is no need for an initial configuration, 
interactive and noninteractive invocation is immediately possible.
\<close>

subsection "Theories and Sessions"
text_raw\<open>\label{system-invoke-theory}\<close>
text \<open>
The propositions and proofs in Isabelle notation are usually collected in ``theory files'' with names of the 
form \<^verbatim>\<open>name.thy\<close>. A theory file\index{theory!file} must import at least one other theory file to build upon its content. For theories
based on higher order logic (``HOL''), the usual starting point to import is the theory @{theory Main}\index{Main (theory)}.

Several theory files can be grouped in a ``session''\index{session}. A session is usually stored in a directory\index{session!directory} in the file system.
It consists of a file named \<^verbatim>\<open>ROOT\<close> \index{ROOT (file)} which contains a specification of the session, and the theory files which
belong to the session.

When Isabelle loads a session it loads and checks all its theory files. Then it can generate a ``heap file''\index{heap file} for
the session which contains the processed session content. The heap file can be reloaded by Isabelle to avoid 
the time and effort for processing and checking the theory files.

A session always has a single parent session\index{session!parent $\sim$}, with the exception of the Isabelle builtin session @{session Pure}\index{Pure (session)}.
Thus, every session depends on a linear sequence of ancestor sessions which begins at @{session Pure}. The ancestor 
sessions have separate heap files. A session is always loaded together with all ancestor sessions. 

Every session has a name of the form \<^verbatim>\<open>chap/sess\<close> where \<^verbatim>\<open>chap\<close> is an arbitrary ``chapter name'', it defaults to
\<^verbatim>\<open>Unsorted\<close>\index{Unsorted (chapter name)}. The session name and the name of the parent session are specified in the \<^verbatim>\<open>ROOT\<close> file in the session
directory. When a session is loaded by Isabelle, its directory and the directories of all ancestor sessions must
be known by Isabelle.

The Isabelle distribution provides heap files for the session \<^verbatim>\<open>HOL/HOL\<close>\index{HOL (session)} and its parent session \<^verbatim>\<open>Pure/Pure\<close>,
the session directories are automatically known.

Every session may be displayed in a ``session document''\index{session!document}. This is a PDF document generated by translating the 
content of the session theory files to \LaTeX. A frame \LaTeX\ document must be provided which includes all content
generated from the theory files. The path of the frame document, whether a session document shall be generated and 
which theories shall be included is specified in the \<^verbatim>\<open>ROOT\<close> file.

The command
\begin{verbatim}
  isabelle mkroot [OPTIONS] [Directory]
\end{verbatim}
\index{mkroot (isabelle tool)} can be used to initialize the given directory (default is the current directory) as session directory. It creates
an initial \<^verbatim>\<open>ROOT\<close> file to be populated with theory file names and other specification for the session, and it
creates a simple frame \LaTeX\ document.
\<close>

subsection "Invocation as Editor"
text_raw\<open>\label{system-invoke-edit}\<close>
text \<open>
Isabelle is invoked for editing using the command
\begin{verbatim}
  isabelle jedit [OPTIONS] [Files ...]
\end{verbatim}
\index{jedit (isabelle tool)} It starts an interactive editor and opens the specified theory files. If no file is specified it opens the 
file \<^verbatim>\<open>Scratch.thy\<close>\index{Scratch.thy (file)} in the user's home directory. If that file does not exist, it is created as an empty file.

The editor also loads a session (together with its ancestors), the default session to load is HOL\index{HOL (session)}.
If a heap file exists for the loaded session it is used, otherwise a heap file is created by processing
all the session's theories.

The default session to load can be changed by the option
\begin{verbatim}
  -l <session name>
\end{verbatim}
\index{-l (option)}

Moreover the editor also loads (but does not open) theories which are transitively imported by the
opened theory files. If these are Isabelle standard theories it finds them automatically. If they 
belong to the session in the current directory it also finds them. If they belong to other sessions, 
the option
\begin{verbatim}
  -d <directory pathname>
\end{verbatim}
\index{-d (option)}
must be used to make the session directory known to Isabelle. For every used session a separate option must be
specified. 

If an imported theory belongs to the loaded session or an ancestor, it is directly referenced there.
Otherwise the theory file is loaded and processed. 
\<close>

subsection "Invocation for Batch Processing"
text_raw\<open>\label{system-invoke-build}\<close>
text \<open>
Isabelle is invoked for batch processing of all theory files in one or more sessions using the command
\begin{verbatim}
  isabelle build [OPTIONS] [Sessions ...]
\end{verbatim}
\index{build (isabelle tool)}
It loads all theory files of the specified sessions and checks the contained proofs. It also loads all required
ancestor sessions. If not known to Isabelle, the corresponding session directories must be specified using option
\<^verbatim>\<open>-d\<close> as described in Section~\ref{system-invoke-edit}. Sessions required for other sessions are loaded from
heap files if existent, otherwise the corresponding theories are loaded and a heap file is created. 

If option \<^verbatim>\<open>-b\<close>\index{-b (option)} is specified, heap files are also created for all sessions specified in the command. Option
\<^verbatim>\<open>-c\<close>\index{-c (option)} clears the specified sessions (removes their heap files) before processing them. Option \<^verbatim>\<open>-n\<close>\index{-n (option)} omits 
the actual session processing, together with option \<^verbatim>\<open>-c\<close> it can be used to simply clear the heap files.

The specified sessions are only processed if at least one of their theory files has changed since the last 
processing or if the session is cleared using option \<^verbatim>\<open>-c\<close>. If option \<^verbatim>\<open>-v\<close>\index{-v (option)} is specified all loaded sessions
and all processed theories are listed on standard output.

If specified for a session in its \<^verbatim>\<open>ROOT\<close> file (see Section~\ref{system-invoke-doc}), also the session document 
is generated when a session is processed.
\<close>

subsection "Invocation for Document Creation"
text_raw\<open>\label{system-invoke-doc}\<close>
text \<open>** todo **\<close>

section "Interactively Working with Isabelle"
text_raw\<open>\label{system-jedit}\<close>

text\<open>
After invoking Isabelle as editor (see Section~\ref{system-invoke-edit}) it supports interactive
work with theories.

The user interface consists of a text area\index{text area} which is surrounded by docking areas where
additional panels\index{panel} can be displayed. Several panels can be displayed in the same docking area,
using tabs to switch among them. Panels may also be displayed as separate undocked 
windows.

A panel can be displayed by selecting it in the \<^verbatim>\<open>Plugins -> Isabelle\<close> menu. Some of
the panels are described in the following sections.
\<close>

subsection "The Text Area"
text_raw\<open>\label{system-jedit-main}\<close>

text\<open>
The text area displays the content of an open theory file and supports editing
it. The font (size) used for display can be configured through the menu in
\<^verbatim>\<open>Utilities -> Global Options -> jEdit -> Text Area\<close> together with many other
options for display.
\<close>

subsubsection "Processing the Text Area Content"

text\<open>
Moreover, in the default configuration, Isabelle automatically processes 
the theory text up to the current part visible in the text area window. This includes processing 
the content of all imported theory files, if the import statement is visible.

Whenever the window is moved forward the processing is continued if ``Continuous
checking'' has not been disabled in the Theories panel. Whenever the content of the text area
is modified the processing is set back and restarted at the modified position.

In the default configuration the progress of the processing is shown by shading the 
unprocessed text in red and by a bar on the right border of the text area which symbolizes
the whole theory file and shows the unprocessed part by red shading as well.
\<close>

subsubsection "Displaying Definitions of Identifiers"

text\<open>
Most identifiers\index{identifier!definition} used in Isabelle content have been defined in some theory file, this also holds
for commands and other elements of the Isabelle syntax. The definition can be accessed by holding
down CTRL (CMD on Macs) and clicking on an identifier. This also works for identifiers displayed
in most other panels.

The definition is displayed by opening the corresponding theory file in the text area and
positioning the window on the definition text.

If an identifier's definition has been loaded from a heap file (see Section~\ref{system-invoke-theory})
it is still displayed by opening the theory file, however, its content is not processed in the way
described above. In particular, this is usually the case for all identifiers defined in the sessions
\<^verbatim>\<open>HOL/HOL\<close> and \<^verbatim>\<open>Pure/Pure\<close>.
\<close>

subsection "The Sidekick Panel"
text_raw\<open>\label{system-jedit-sidekick}\<close>

text\<open>
The Sidekick panel\index{panel!sidekick $\sim$} displays a structured view of the content of the text area and supports
interactively expanding and collapsing substructures. It can be used for navigation in the text
area by clicking on an item displayed in the Sidekick panel.

The structure view is not updated automatically upon changes in the the text area, to update it the
text area content must be saved to its theory file.
\<close>

subsection "The Output Panel"
text_raw\<open>\label{system-jedit-output}\<close>

text\<open>
The Output panel\index{panel!output $\sim$} displays the result of the theory text processing when it reaches the 
cursor position in the text area. 

The displayed information depends on the cursor position and may be an information
about the current theorem or proof or it may be an error message.
\<close>

subsection "The State Panel"
text_raw\<open>\label{system-jedit-state}\<close>

text\<open>
The State panel\index{panel!state $\sim$}\index{state!panel} displays a specific result of the theory text processing
if the cursor position is in a proof. It is called the ``goal state''\index{goal!state} (see 
Section~\ref{proof-state-goal}), and describes what remains to be proved by the
rest of the proof.

The Output panel can be configured to include the goal state in its display by
checking the ``Proof state'' button.
\<close>

subsection "The Symbols Panel"
text_raw\<open>\label{system-jedit-symbols}\<close>

text\<open>
Isabelle uses a large set of mathematical symbols and other special symbols which
are usually not on the keyboard. The Symbols panel\index{panel!symbols $\sim$}\index{symbol!panel} can be used to input such
symbols in the text area. It comprises several tabs for selecting different symbol sets.

Alternatively, symbols not available on the keyboard may be entered by a specific sequence
of keys, called an abbreviation\index{symbol!abbreviation}. As an example, the sequence \<^verbatim>\<open>==>\<close> is an abbreviation for the
symbol \<open>\<Longrightarrow>\<close> consisting of three separate keys. In the interactive editor Isabelle replaces some
abbreviations upon entering automatically by their symbol, others are left as they are. 

If the mouse is positioned on a symbol in the Symbols panel available abbreviations are displayed
as \<^verbatim>\<open>abbrev:...\<close> in the popup message.
\<close>

subsection "The Documentation Panel"
text_raw\<open>\label{system-jedit-documentation}\<close>

text\<open>
A comprehensive set of documentation about Isabelle can be opened 
through the Documentation panel\index{panel!documentation $\sim$}\index{documentation!panel}.
This \cbstart introduction refers to some of these documentations, if applicable, through
the bibliography.\cbend 

For example, more information about the use of the interactive editor can be found 
in the Isabelle \cbstart Manual about jEdit \<^cite>\<open>jedit\<close>.\cbend
\<close>

subsection "The Query Panel"
text_raw\<open>\label{system-jedit-query}\<close>

text\<open>
The Query panel\index{panel!query $\sim$} supports active searching for items in the content of all loaded sessions. There are
several tabs for searching different kinds of items. Depending on the kind, a search specification\index{search!specification}
must be entered in the tab, the results are displayed in the window below.

Note that a simple full text search is usually not supported. More information about supported
search specifications for different kinds of items can be found in Chapter~\ref{theory}.
\<close>

subsection "The Theories Panel"
text_raw\<open>\label{system-jedit-theories}\<close>

text\<open>
The Theories panel\index{panel!theories $\sim$}\index{theories!panel} displays the loaded session and the opened or imported theories which do
not belong to the loaded session or its ancestors. The (parts of) theories which have not 
been processed are shaded in red.

If the check button next to a theory is checked, the theory file is processed
independently of the position of the text area window.
\<close>

end
